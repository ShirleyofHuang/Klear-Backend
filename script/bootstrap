
#!/usr/bin/env bash

# Exit immediately if any subcommand fails
set -ea

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

if [[ $OSTYPE == 'darwin'* ]]; then
  DIR="$DIR/.."
fi

# Install Homebrew
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

# Install Brewfile dependencies
cd "$DIR"
pwd

if [ "$(uname -s)" = "Darwin" ]; then # Check if is used on MacOS
  brew bundle check >/dev/null 2>&1  || {  # Check if there is anything to install or upgrade in the Brewfile, output the error to stdout
    echo "==> Installing Homebrew dependencies…"
    brew bundle
  }
fi

# python dependencies
echo "Installing Python"
if [ "$(uname)" == "Darwin" ]; then
brew install python3
pip3 freeze > requirements.txt
pip3 install -r requirements.txt
else
sudo apt-get update
sudo apt-get install python3
pip3 freeze > requirements.txt
pip3 install -r requirements.txt
fi

# Install npm dependencies
echo "==> Installing npm dependencies…"
npm install
npm install -g db-migrate

# Make default .env if .env does not exist
echo "==> Updating .env variables"
cd ..
if [ ! -f .env ]
then
  cp -rn .env.template .env
fi

# Make default dev.json if it does not exist
echo "==> Updating dev.json"
if [ ! -f database/config/dev.json ]
then
  source .env
  pwd
  mkdir -p database
  mkdir -p database/config
  cd database/config
  touch dev.json
  echo "{
    \"dev\": {
        \"host\": \"${MYSQL_HOST}\", 
        \"user\": \"${MYSQL_USER}\",
        \"password\": \"${MYSQL_PASSWORD}\",
        \"database\": \"${MYSQL_DATABASE}\",
        \"driver\": \"mysql\",
        \"multipleStatements\": true
    }, \"sql-file\": true
  }" >  dev.json
fi

# Run DB Migrations
echo "==== Done ==================================================================================================================="
echo "==> Run `db-migrate up --config database/config/dev.json` for DB migration. ================================================="